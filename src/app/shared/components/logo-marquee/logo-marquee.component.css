/* Based on https://codepen.io/jh3y/pen/BabOBzv */
:host {
  /* Speed of the scrolling */
  --speed: 20;
  /* Number of items in the list */
  --count: 6;
  /* Scale of the component to change its size without affecting the position calculations */
  --scale: 1;
}

:host {
  display: block;
  scale: var(--scale);
  container-type: size;
  width: 100%;
  height: 100px;
  overflow: hidden;
}

.container {
  position: relative;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.container {
  display: grid;
  @container (width < 970px) {
    -webkit-mask: linear-gradient(90deg, transparent, black 15% 85%, transparent);
    mask: linear-gradient(90deg, transparent, black 15% 85%, transparent);
  }
  width: 100%;
  min-width: 300px;
  min-height: 100px;
}

ul {
  display: flex;
  gap: 1rem;
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.container ul {
  align-items: center;
  padding: 0;
  width: fit-content;
  @container (width > 970px) {
    justify-content: space-around;
    width: 100%;
  }
  height: 100%;
  pointer-events: none;
}

li {
  display: grid;
  place-items: center;
  @container (width < 970px) {
    aspect-ratio: 21 / 9;
  }
  height: 80%;
  font-size: clamp(2rem, 4vw + 1rem, 8rem);
}

:is(ul, li) {
  -webkit-animation-play-state: running !important;
  animation-play-state: running !important;

  @container (width > 970px) {
    -webkit-animation-play-state: paused !important;
    animation-play-state: paused !important;
  }
}

img {
  max-width: 186px;
  max-height: 50px;
}

:host-context(.dark) img {
  filter: grayscale(1) invert(1) brightness(150%);
}

/* Blur component */
.blur {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 2;
  width: 25%;
  pointer-events: none;
}

.blur--right {
  right: 0;
}

.blur--left {
  left: 0;
  rotate: 180deg;
}

.blur div {
  position: absolute;
  z-index: var(--index);
  -webkit-backdrop-filter: blur(calc((var(--index, 0) * var(--blur, 0)) * 2px));
  backdrop-filter: blur(calc((var(--index, 0) * var(--blur, 0)) * 2px));
  -webkit-mask: linear-gradient(
    90deg,
    transparent calc(var(--index) * calc((100 / var(--blurs)) * 1%)),
    black calc((var(--index) + 1) * calc((100 / var(--blurs)) * 1%)),
    black calc((var(--index) + 2) * calc((100 / var(--blurs)) * 1%)),
    transparent calc((var(--index) + 3) * calc((100 / var(--blurs)) * 1%))
  );
  mask: linear-gradient(
    90deg,
    transparent calc(var(--index) * calc((100 / var(--blurs)) * 1%)),
    black calc((var(--index) + 1) * calc((100 / var(--blurs)) * 1%)),
    black calc((var(--index) + 2) * calc((100 / var(--blurs)) * 1%)),
    transparent calc((var(--index) + 3) * calc((100 / var(--blurs)) * 1%))
  );
  inset: 0;
}

.blur {
  opacity: 0;
}

/*[data-outline="true"] .blur {
  border: 4px dashed hotpink;
  background: hsl(320 100% 50% / 0.1);
}

[data-blurring="true"] .blur {
  opacity: 1;
}*/

/* The animation stuff */
/* @media (prefers-reduced-motion: no-preference) { */
@container (width < 970px) {
  ul {
    gap: 0;
  }
  .container {
    padding-inline: 0;
  }

  li {
    --duration: calc(var(--speed) * 1s);
    --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) * -1));
    translate: var(--origin-x) var(--origin-y);
    -webkit-animation: slide-rtl var(--duration) var(--delay) infinite linear paused;
    animation: slide-rtl var(--duration) var(--delay) infinite linear paused;
  }
  li {
    --origin-x: calc(((var(--count) - var(--index)) + var(--inset, 0)) * 100%);
    --origin-y: 0;
    --destination-x: calc(calc((var(--index) + 1 + var(--outset, 0)) * -100%));
    --destination-y: 0;
  }

  @keyframes slide-rtl {
    100% {
      translate: var(--destination-x) var(--destination-y);
    }
  }
}
